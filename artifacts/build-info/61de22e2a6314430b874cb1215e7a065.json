{
	"id": "61de22e2a6314430b874cb1215e7a065",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract2_test.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n// import \"./contracts/interfaces/IRampService.sol\";\n\ncontract RampService is Ownable, ReentrancyGuard {\n    mapping(address => bool) public allowedToken;\n    // mapping(string => mapping(address => uint256)) public withdrawTx;\n\n    function allowToken(address _token) public  {\n        allowedToken[_token] = true;\n    }\n\n    function disallowToken(address _token) public onlyOwner {\n        allowedToken[_token] = false;\n    }\n\n    function buy(address address_token, address receiver, uint256 amount) public onlyOwner {\n        require(allowedToken[address_token], \"RampService: Token is not allowed\");\n        // require(withdrawTx[request.txid][request.token] == 0, \"RampService: txid is existed\");\n        require(receiver != address(0), \"RampService: Invalid receiver address\");\n\n        bool sent = false;\n        IERC20 token = IERC20(address_token);\n        require(token.balanceOf(address(this)) >= amount, \"RampService: Insufficient balance in contract\");\n        sent = token.transfer(receiver, amount);\n        require(sent, \"RampService: Failed processing\");\n        // withdrawTx[request.txid][request.token] = request.amount;\n        \n        // emit Sold(request.token, request.amount, request.receiver, request.txid);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract2_test.sol": {
				"RampService": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "allowToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "address_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "disallowToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract2_test.sol\":285:1475  contract RampService is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract2_test.sol\":285:1475  contract RampService is Ownable, ReentrancyGuard {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contract2_test.sol\":285:1475  contract RampService is Ownable, ReentrancyGuard {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract2_test.sol\":285:1475  contract RampService is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb53472ef\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe79767af\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x153e66e6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x756742f8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract2_test.sol\":665:1473  function buy(address address_token, address receiver, uint256 amount) public onlyOwner {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contract2_test.sol\":340:384  mapping(address => bool) public allowedToken */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract2_test.sol\":464:552  function allowToken(address _token) public  {... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contract2_test.sol\":558:659  function disallowToken(address _token) public onlyOwner {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contract2_test.sol\":665:1473  function buy(address address_token, address receiver, uint256 amount) public onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_37:\n        /* \"contract2_test.sol\":770:782  allowedToken */\n      0x02\n        /* \"contract2_test.sol\":770:797  allowedToken[address_token] */\n      0x00\n        /* \"contract2_test.sol\":783:796  address_token */\n      dup5\n        /* \"contract2_test.sol\":770:797  allowedToken[address_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract2_test.sol\":762:835  require(allowedToken[address_token], \"RampService: Token is not allowed\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contract2_test.sol\":971:972  0 */\n      0x00\n        /* \"contract2_test.sol\":951:973  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract2_test.sol\":951:959  receiver */\n      dup3\n        /* \"contract2_test.sol\":951:973  receiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract2_test.sol\":943:1015  require(receiver != address(0), \"RampService: Invalid receiver address\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contract2_test.sol\":1026:1035  bool sent */\n      0x00\n        /* \"contract2_test.sol\":1053:1065  IERC20 token */\n      dup1\n        /* \"contract2_test.sol\":1075:1088  address_token */\n      dup5\n        /* \"contract2_test.sol\":1053:1089  IERC20 token = IERC20(address_token) */\n      swap1\n      pop\n        /* \"contract2_test.sol\":1141:1147  amount */\n      dup3\n        /* \"contract2_test.sol\":1107:1112  token */\n      dup2\n        /* \"contract2_test.sol\":1107:1122  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contract2_test.sol\":1131:1135  this */\n      address\n        /* \"contract2_test.sol\":1107:1137  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contract2_test.sol\":1107:1147  token.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contract2_test.sol\":1099:1197  require(token.balanceOf(address(this)) >= amount, \"RampService: Insufficient balance in contract\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contract2_test.sol\":1214:1219  token */\n      dup1\n        /* \"contract2_test.sol\":1214:1228  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contract2_test.sol\":1229:1237  receiver */\n      dup6\n        /* \"contract2_test.sol\":1239:1245  amount */\n      dup6\n        /* \"contract2_test.sol\":1214:1246  token.transfer(receiver, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contract2_test.sol\":1207:1246  sent = token.transfer(receiver, amount) */\n      swap2\n      pop\n        /* \"contract2_test.sol\":1264:1268  sent */\n      dup2\n        /* \"contract2_test.sol\":1256:1303  require(sent, \"RampService: Failed processing\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contract2_test.sol\":752:1473  {... */\n      pop\n      pop\n        /* \"contract2_test.sol\":665:1473  function buy(address address_token, address receiver, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract2_test.sol\":340:384  mapping(address => bool) public allowedToken */\n    tag_20:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract2_test.sol\":464:552  function allowToken(address _token) public  {... */\n    tag_29:\n        /* \"contract2_test.sol\":541:545  true */\n      0x01\n        /* \"contract2_test.sol\":518:530  allowedToken */\n      0x02\n        /* \"contract2_test.sol\":518:538  allowedToken[_token] */\n      0x00\n        /* \"contract2_test.sol\":531:537  _token */\n      dup4\n        /* \"contract2_test.sol\":518:538  allowedToken[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract2_test.sol\":518:545  allowedToken[_token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract2_test.sol\":464:552  function allowToken(address _token) public  {... */\n      pop\n      jump\t// out\n        /* \"contract2_test.sol\":558:659  function disallowToken(address _token) public onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_71:\n        /* \"contract2_test.sol\":647:652  false */\n      0x00\n        /* \"contract2_test.sol\":624:636  allowedToken */\n      0x02\n        /* \"contract2_test.sol\":624:644  allowedToken[_token] */\n      0x00\n        /* \"contract2_test.sol\":637:643  _token */\n      dup4\n        /* \"contract2_test.sol\":624:644  allowedToken[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract2_test.sol\":624:652  allowedToken[_token] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract2_test.sol\":558:659  function disallowToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_90:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_92:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_93:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_125\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_92\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_94:\n        /* \"#utility.yul\":641:665   */\n      tag_127\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_128:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_95:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_130\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_94\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_96:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_97:\n        /* \"#utility.yul\":997:1021   */\n      tag_133\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_96\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_134:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_98:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_136\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_97\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_13:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      dup1\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_139\n      tag_90\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1307:1426   */\n    tag_138:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_140\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_95\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_141\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_95\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_142\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_98\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:2151   */\n    tag_19:\n        /* \"#utility.yul\":1881:1887   */\n      0x00\n        /* \"#utility.yul\":1930:1932   */\n      0x20\n        /* \"#utility.yul\":1918:1927   */\n      dup3\n        /* \"#utility.yul\":1909:1916   */\n      dup5\n        /* \"#utility.yul\":1905:1928   */\n      sub\n        /* \"#utility.yul\":1901:1933   */\n      slt\n        /* \"#utility.yul\":1898:2017   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1936:2015   */\n      tag_145\n      tag_90\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1898:2017   */\n    tag_144:\n        /* \"#utility.yul\":2056:2057   */\n      0x00\n        /* \"#utility.yul\":2081:2134   */\n      tag_146\n        /* \"#utility.yul\":2126:2133   */\n      dup5\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2106:2115   */\n      dup6\n        /* \"#utility.yul\":2102:2124   */\n      add\n        /* \"#utility.yul\":2081:2134   */\n      tag_95\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2071:2134   */\n      swap2\n      pop\n        /* \"#utility.yul\":2027:2144   */\n      pop\n        /* \"#utility.yul\":1822:2151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2247   */\n    tag_99:\n        /* \"#utility.yul\":2191:2198   */\n      0x00\n        /* \"#utility.yul\":2234:2239   */\n      dup2\n        /* \"#utility.yul\":2227:2240   */\n      iszero\n        /* \"#utility.yul\":2220:2241   */\n      iszero\n        /* \"#utility.yul\":2209:2241   */\n      swap1\n      pop\n        /* \"#utility.yul\":2157:2247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2253:2362   */\n    tag_100:\n        /* \"#utility.yul\":2334:2355   */\n      tag_149\n        /* \"#utility.yul\":2349:2354   */\n      dup2\n        /* \"#utility.yul\":2334:2355   */\n      tag_99\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2329:2332   */\n      dup3\n        /* \"#utility.yul\":2322:2356   */\n      mstore\n        /* \"#utility.yul\":2253:2362   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2368:2578   */\n    tag_22:\n        /* \"#utility.yul\":2455:2459   */\n      0x00\n        /* \"#utility.yul\":2493:2495   */\n      0x20\n        /* \"#utility.yul\":2482:2491   */\n      dup3\n        /* \"#utility.yul\":2478:2496   */\n      add\n        /* \"#utility.yul\":2470:2496   */\n      swap1\n      pop\n        /* \"#utility.yul\":2506:2571   */\n      tag_151\n        /* \"#utility.yul\":2568:2569   */\n      0x00\n        /* \"#utility.yul\":2557:2566   */\n      dup4\n        /* \"#utility.yul\":2553:2570   */\n      add\n        /* \"#utility.yul\":2544:2550   */\n      dup5\n        /* \"#utility.yul\":2506:2571   */\n      tag_100\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2368:2578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2584:2702   */\n    tag_101:\n        /* \"#utility.yul\":2671:2695   */\n      tag_153\n        /* \"#utility.yul\":2689:2694   */\n      dup2\n        /* \"#utility.yul\":2671:2695   */\n      tag_93\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2666:2669   */\n      dup3\n        /* \"#utility.yul\":2659:2696   */\n      mstore\n        /* \"#utility.yul\":2584:2702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2708:2930   */\n    tag_26:\n        /* \"#utility.yul\":2801:2805   */\n      0x00\n        /* \"#utility.yul\":2839:2841   */\n      0x20\n        /* \"#utility.yul\":2828:2837   */\n      dup3\n        /* \"#utility.yul\":2824:2842   */\n      add\n        /* \"#utility.yul\":2816:2842   */\n      swap1\n      pop\n        /* \"#utility.yul\":2852:2923   */\n      tag_155\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2909:2918   */\n      dup4\n        /* \"#utility.yul\":2905:2922   */\n      add\n        /* \"#utility.yul\":2896:2902   */\n      dup5\n        /* \"#utility.yul\":2852:2923   */\n      tag_101\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2708:2930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2936:3105   */\n    tag_102:\n        /* \"#utility.yul\":3020:3031   */\n      0x00\n        /* \"#utility.yul\":3054:3060   */\n      dup3\n        /* \"#utility.yul\":3049:3052   */\n      dup3\n        /* \"#utility.yul\":3042:3061   */\n      mstore\n        /* \"#utility.yul\":3094:3098   */\n      0x20\n        /* \"#utility.yul\":3089:3092   */\n      dup3\n        /* \"#utility.yul\":3085:3099   */\n      add\n        /* \"#utility.yul\":3070:3099   */\n      swap1\n      pop\n        /* \"#utility.yul\":2936:3105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3111:3331   */\n    tag_103:\n        /* \"#utility.yul\":3251:3285   */\n      0x52616d70536572766963653a20546f6b656e206973206e6f7420616c6c6f7765\n        /* \"#utility.yul\":3247:3248   */\n      0x00\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3235:3249   */\n      add\n        /* \"#utility.yul\":3228:3286   */\n      mstore\n        /* \"#utility.yul\":3320:3323   */\n      0x6400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3315:3317   */\n      0x20\n        /* \"#utility.yul\":3307:3313   */\n      dup3\n        /* \"#utility.yul\":3303:3318   */\n      add\n        /* \"#utility.yul\":3296:3324   */\n      mstore\n        /* \"#utility.yul\":3111:3331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3337:3703   */\n    tag_104:\n        /* \"#utility.yul\":3479:3482   */\n      0x00\n        /* \"#utility.yul\":3500:3567   */\n      tag_159\n        /* \"#utility.yul\":3564:3566   */\n      0x21\n        /* \"#utility.yul\":3559:3562   */\n      dup4\n        /* \"#utility.yul\":3500:3567   */\n      tag_102\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3493:3567   */\n      swap2\n      pop\n        /* \"#utility.yul\":3576:3669   */\n      tag_160\n        /* \"#utility.yul\":3665:3668   */\n      dup3\n        /* \"#utility.yul\":3576:3669   */\n      tag_103\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3694:3696   */\n      0x40\n        /* \"#utility.yul\":3689:3692   */\n      dup3\n        /* \"#utility.yul\":3685:3697   */\n      add\n        /* \"#utility.yul\":3678:3697   */\n      swap1\n      pop\n        /* \"#utility.yul\":3337:3703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3709:4128   */\n    tag_42:\n        /* \"#utility.yul\":3875:3879   */\n      0x00\n        /* \"#utility.yul\":3913:3915   */\n      0x20\n        /* \"#utility.yul\":3902:3911   */\n      dup3\n        /* \"#utility.yul\":3898:3916   */\n      add\n        /* \"#utility.yul\":3890:3916   */\n      swap1\n      pop\n        /* \"#utility.yul\":3962:3971   */\n      dup2\n        /* \"#utility.yul\":3956:3960   */\n      dup2\n        /* \"#utility.yul\":3952:3972   */\n      sub\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3933:3950   */\n      add\n        /* \"#utility.yul\":3926:3973   */\n      mstore\n        /* \"#utility.yul\":3990:4121   */\n      tag_162\n        /* \"#utility.yul\":4116:4120   */\n      dup2\n        /* \"#utility.yul\":3990:4121   */\n      tag_104\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3982:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":3709:4128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4134:4358   */\n    tag_105:\n        /* \"#utility.yul\":4274:4308   */\n      0x52616d70536572766963653a20496e76616c6964207265636569766572206164\n        /* \"#utility.yul\":4270:4271   */\n      0x00\n        /* \"#utility.yul\":4262:4268   */\n      dup3\n        /* \"#utility.yul\":4258:4272   */\n      add\n        /* \"#utility.yul\":4251:4309   */\n      mstore\n        /* \"#utility.yul\":4343:4350   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4338:4340   */\n      0x20\n        /* \"#utility.yul\":4330:4336   */\n      dup3\n        /* \"#utility.yul\":4326:4341   */\n      add\n        /* \"#utility.yul\":4319:4351   */\n      mstore\n        /* \"#utility.yul\":4134:4358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4364:4730   */\n    tag_106:\n        /* \"#utility.yul\":4506:4509   */\n      0x00\n        /* \"#utility.yul\":4527:4594   */\n      tag_165\n        /* \"#utility.yul\":4591:4593   */\n      0x25\n        /* \"#utility.yul\":4586:4589   */\n      dup4\n        /* \"#utility.yul\":4527:4594   */\n      tag_102\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4520:4594   */\n      swap2\n      pop\n        /* \"#utility.yul\":4603:4696   */\n      tag_166\n        /* \"#utility.yul\":4692:4695   */\n      dup3\n        /* \"#utility.yul\":4603:4696   */\n      tag_105\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4721:4723   */\n      0x40\n        /* \"#utility.yul\":4716:4719   */\n      dup3\n        /* \"#utility.yul\":4712:4724   */\n      add\n        /* \"#utility.yul\":4705:4724   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4736:5155   */\n    tag_45:\n        /* \"#utility.yul\":4902:4906   */\n      0x00\n        /* \"#utility.yul\":4940:4942   */\n      0x20\n        /* \"#utility.yul\":4929:4938   */\n      dup3\n        /* \"#utility.yul\":4925:4943   */\n      add\n        /* \"#utility.yul\":4917:4943   */\n      swap1\n      pop\n        /* \"#utility.yul\":4989:4998   */\n      dup2\n        /* \"#utility.yul\":4983:4987   */\n      dup2\n        /* \"#utility.yul\":4979:4999   */\n      sub\n        /* \"#utility.yul\":4975:4976   */\n      0x00\n        /* \"#utility.yul\":4964:4973   */\n      dup4\n        /* \"#utility.yul\":4960:4977   */\n      add\n        /* \"#utility.yul\":4953:5000   */\n      mstore\n        /* \"#utility.yul\":5017:5148   */\n      tag_168\n        /* \"#utility.yul\":5143:5147   */\n      dup2\n        /* \"#utility.yul\":5017:5148   */\n      tag_106\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5009:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":4736:5155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5161:5304   */\n    tag_107:\n        /* \"#utility.yul\":5218:5223   */\n      0x00\n        /* \"#utility.yul\":5249:5255   */\n      dup2\n        /* \"#utility.yul\":5243:5256   */\n      mload\n        /* \"#utility.yul\":5234:5256   */\n      swap1\n      pop\n        /* \"#utility.yul\":5265:5298   */\n      tag_170\n        /* \"#utility.yul\":5292:5297   */\n      dup2\n        /* \"#utility.yul\":5265:5298   */\n      tag_97\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5161:5304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5310:5661   */\n    tag_50:\n        /* \"#utility.yul\":5380:5386   */\n      0x00\n        /* \"#utility.yul\":5429:5431   */\n      0x20\n        /* \"#utility.yul\":5417:5426   */\n      dup3\n        /* \"#utility.yul\":5408:5415   */\n      dup5\n        /* \"#utility.yul\":5404:5427   */\n      sub\n        /* \"#utility.yul\":5400:5432   */\n      slt\n        /* \"#utility.yul\":5397:5516   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":5435:5514   */\n      tag_173\n      tag_90\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5397:5516   */\n    tag_172:\n        /* \"#utility.yul\":5555:5556   */\n      0x00\n        /* \"#utility.yul\":5580:5644   */\n      tag_174\n        /* \"#utility.yul\":5636:5643   */\n      dup5\n        /* \"#utility.yul\":5627:5633   */\n      dup3\n        /* \"#utility.yul\":5616:5625   */\n      dup6\n        /* \"#utility.yul\":5612:5634   */\n      add\n        /* \"#utility.yul\":5580:5644   */\n      tag_107\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5570:5644   */\n      swap2\n      pop\n        /* \"#utility.yul\":5526:5654   */\n      pop\n        /* \"#utility.yul\":5310:5661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5667:5899   */\n    tag_108:\n        /* \"#utility.yul\":5807:5841   */\n      0x52616d70536572766963653a20496e73756666696369656e742062616c616e63\n        /* \"#utility.yul\":5803:5804   */\n      0x00\n        /* \"#utility.yul\":5795:5801   */\n      dup3\n        /* \"#utility.yul\":5791:5805   */\n      add\n        /* \"#utility.yul\":5784:5842   */\n      mstore\n        /* \"#utility.yul\":5876:5891   */\n      0x6520696e20636f6e747261637400000000000000000000000000000000000000\n        /* \"#utility.yul\":5871:5873   */\n      0x20\n        /* \"#utility.yul\":5863:5869   */\n      dup3\n        /* \"#utility.yul\":5859:5874   */\n      add\n        /* \"#utility.yul\":5852:5892   */\n      mstore\n        /* \"#utility.yul\":5667:5899   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5905:6271   */\n    tag_109:\n        /* \"#utility.yul\":6047:6050   */\n      0x00\n        /* \"#utility.yul\":6068:6135   */\n      tag_177\n        /* \"#utility.yul\":6132:6134   */\n      0x2d\n        /* \"#utility.yul\":6127:6130   */\n      dup4\n        /* \"#utility.yul\":6068:6135   */\n      tag_102\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6061:6135   */\n      swap2\n      pop\n        /* \"#utility.yul\":6144:6237   */\n      tag_178\n        /* \"#utility.yul\":6233:6236   */\n      dup3\n        /* \"#utility.yul\":6144:6237   */\n      tag_108\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6262:6264   */\n      0x40\n        /* \"#utility.yul\":6257:6260   */\n      dup3\n        /* \"#utility.yul\":6253:6265   */\n      add\n        /* \"#utility.yul\":6246:6265   */\n      swap1\n      pop\n        /* \"#utility.yul\":5905:6271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6277:6696   */\n    tag_53:\n        /* \"#utility.yul\":6443:6447   */\n      0x00\n        /* \"#utility.yul\":6481:6483   */\n      0x20\n        /* \"#utility.yul\":6470:6479   */\n      dup3\n        /* \"#utility.yul\":6466:6484   */\n      add\n        /* \"#utility.yul\":6458:6484   */\n      swap1\n      pop\n        /* \"#utility.yul\":6530:6539   */\n      dup2\n        /* \"#utility.yul\":6524:6528   */\n      dup2\n        /* \"#utility.yul\":6520:6540   */\n      sub\n        /* \"#utility.yul\":6516:6517   */\n      0x00\n        /* \"#utility.yul\":6505:6514   */\n      dup4\n        /* \"#utility.yul\":6501:6518   */\n      add\n        /* \"#utility.yul\":6494:6541   */\n      mstore\n        /* \"#utility.yul\":6558:6689   */\n      tag_180\n        /* \"#utility.yul\":6684:6688   */\n      dup2\n        /* \"#utility.yul\":6558:6689   */\n      tag_109\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6550:6689   */\n      swap1\n      pop\n        /* \"#utility.yul\":6277:6696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6702:6820   */\n    tag_110:\n        /* \"#utility.yul\":6789:6813   */\n      tag_182\n        /* \"#utility.yul\":6807:6812   */\n      dup2\n        /* \"#utility.yul\":6789:6813   */\n      tag_96\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6784:6787   */\n      dup3\n        /* \"#utility.yul\":6777:6814   */\n      mstore\n        /* \"#utility.yul\":6702:6820   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6826:7158   */\n    tag_55:\n        /* \"#utility.yul\":6947:6951   */\n      0x00\n        /* \"#utility.yul\":6985:6987   */\n      0x40\n        /* \"#utility.yul\":6974:6983   */\n      dup3\n        /* \"#utility.yul\":6970:6988   */\n      add\n        /* \"#utility.yul\":6962:6988   */\n      swap1\n      pop\n        /* \"#utility.yul\":6998:7069   */\n      tag_184\n        /* \"#utility.yul\":7066:7067   */\n      0x00\n        /* \"#utility.yul\":7055:7064   */\n      dup4\n        /* \"#utility.yul\":7051:7068   */\n      add\n        /* \"#utility.yul\":7042:7048   */\n      dup6\n        /* \"#utility.yul\":6998:7069   */\n      tag_101\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7079:7151   */\n      tag_185\n        /* \"#utility.yul\":7147:7149   */\n      0x20\n        /* \"#utility.yul\":7136:7145   */\n      dup4\n        /* \"#utility.yul\":7132:7150   */\n      add\n        /* \"#utility.yul\":7123:7129   */\n      dup5\n        /* \"#utility.yul\":7079:7151   */\n      tag_110\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6826:7158   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7164:7280   */\n    tag_111:\n        /* \"#utility.yul\":7234:7255   */\n      tag_187\n        /* \"#utility.yul\":7249:7254   */\n      dup2\n        /* \"#utility.yul\":7234:7255   */\n      tag_99\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7227:7232   */\n      dup2\n        /* \"#utility.yul\":7224:7256   */\n      eq\n        /* \"#utility.yul\":7214:7274   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":7270:7271   */\n      0x00\n        /* \"#utility.yul\":7267:7268   */\n      dup1\n        /* \"#utility.yul\":7260:7272   */\n      revert\n        /* \"#utility.yul\":7214:7274   */\n    tag_188:\n        /* \"#utility.yul\":7164:7280   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7423   */\n    tag_112:\n        /* \"#utility.yul\":7340:7345   */\n      0x00\n        /* \"#utility.yul\":7371:7377   */\n      dup2\n        /* \"#utility.yul\":7365:7378   */\n      mload\n        /* \"#utility.yul\":7356:7378   */\n      swap1\n      pop\n        /* \"#utility.yul\":7387:7417   */\n      tag_190\n        /* \"#utility.yul\":7411:7416   */\n      dup2\n        /* \"#utility.yul\":7387:7417   */\n      tag_111\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7286:7423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7429:7774   */\n    tag_59:\n        /* \"#utility.yul\":7496:7502   */\n      0x00\n        /* \"#utility.yul\":7545:7547   */\n      0x20\n        /* \"#utility.yul\":7533:7542   */\n      dup3\n        /* \"#utility.yul\":7524:7531   */\n      dup5\n        /* \"#utility.yul\":7520:7543   */\n      sub\n        /* \"#utility.yul\":7516:7548   */\n      slt\n        /* \"#utility.yul\":7513:7632   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":7551:7630   */\n      tag_193\n      tag_90\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7513:7632   */\n    tag_192:\n        /* \"#utility.yul\":7671:7672   */\n      0x00\n        /* \"#utility.yul\":7696:7757   */\n      tag_194\n        /* \"#utility.yul\":7749:7756   */\n      dup5\n        /* \"#utility.yul\":7740:7746   */\n      dup3\n        /* \"#utility.yul\":7729:7738   */\n      dup6\n        /* \"#utility.yul\":7725:7747   */\n      add\n        /* \"#utility.yul\":7696:7757   */\n      tag_112\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7686:7757   */\n      swap2\n      pop\n        /* \"#utility.yul\":7642:7767   */\n      pop\n        /* \"#utility.yul\":7429:7774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7780:7960   */\n    tag_113:\n        /* \"#utility.yul\":7920:7952   */\n      0x52616d70536572766963653a204661696c65642070726f63657373696e670000\n        /* \"#utility.yul\":7916:7917   */\n      0x00\n        /* \"#utility.yul\":7908:7914   */\n      dup3\n        /* \"#utility.yul\":7904:7918   */\n      add\n        /* \"#utility.yul\":7897:7953   */\n      mstore\n        /* \"#utility.yul\":7780:7960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7966:8332   */\n    tag_114:\n        /* \"#utility.yul\":8108:8111   */\n      0x00\n        /* \"#utility.yul\":8129:8196   */\n      tag_197\n        /* \"#utility.yul\":8193:8195   */\n      0x1e\n        /* \"#utility.yul\":8188:8191   */\n      dup4\n        /* \"#utility.yul\":8129:8196   */\n      tag_102\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8122:8196   */\n      swap2\n      pop\n        /* \"#utility.yul\":8205:8298   */\n      tag_198\n        /* \"#utility.yul\":8294:8297   */\n      dup3\n        /* \"#utility.yul\":8205:8298   */\n      tag_113\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8323:8325   */\n      0x20\n        /* \"#utility.yul\":8318:8321   */\n      dup3\n        /* \"#utility.yul\":8314:8326   */\n      add\n        /* \"#utility.yul\":8307:8326   */\n      swap1\n      pop\n        /* \"#utility.yul\":7966:8332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8338:8757   */\n    tag_62:\n        /* \"#utility.yul\":8504:8508   */\n      0x00\n        /* \"#utility.yul\":8542:8544   */\n      0x20\n        /* \"#utility.yul\":8531:8540   */\n      dup3\n        /* \"#utility.yul\":8527:8545   */\n      add\n        /* \"#utility.yul\":8519:8545   */\n      swap1\n      pop\n        /* \"#utility.yul\":8591:8600   */\n      dup2\n        /* \"#utility.yul\":8585:8589   */\n      dup2\n        /* \"#utility.yul\":8581:8601   */\n      sub\n        /* \"#utility.yul\":8577:8578   */\n      0x00\n        /* \"#utility.yul\":8566:8575   */\n      dup4\n        /* \"#utility.yul\":8562:8579   */\n      add\n        /* \"#utility.yul\":8555:8602   */\n      mstore\n        /* \"#utility.yul\":8619:8750   */\n      tag_200\n        /* \"#utility.yul\":8745:8749   */\n      dup2\n        /* \"#utility.yul\":8619:8750   */\n      tag_114\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8611:8750   */\n      swap1\n      pop\n        /* \"#utility.yul\":8338:8757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8763:8988   */\n    tag_115:\n        /* \"#utility.yul\":8903:8937   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8899:8900   */\n      0x00\n        /* \"#utility.yul\":8891:8897   */\n      dup3\n        /* \"#utility.yul\":8887:8901   */\n      add\n        /* \"#utility.yul\":8880:8938   */\n      mstore\n        /* \"#utility.yul\":8972:8980   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8967:8969   */\n      0x20\n        /* \"#utility.yul\":8959:8965   */\n      dup3\n        /* \"#utility.yul\":8955:8970   */\n      add\n        /* \"#utility.yul\":8948:8981   */\n      mstore\n        /* \"#utility.yul\":8763:8988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8994:9360   */\n    tag_116:\n        /* \"#utility.yul\":9136:9139   */\n      0x00\n        /* \"#utility.yul\":9157:9224   */\n      tag_203\n        /* \"#utility.yul\":9221:9223   */\n      0x26\n        /* \"#utility.yul\":9216:9219   */\n      dup4\n        /* \"#utility.yul\":9157:9224   */\n      tag_102\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9150:9224   */\n      swap2\n      pop\n        /* \"#utility.yul\":9233:9326   */\n      tag_204\n        /* \"#utility.yul\":9322:9325   */\n      dup3\n        /* \"#utility.yul\":9233:9326   */\n      tag_115\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":9351:9353   */\n      0x40\n        /* \"#utility.yul\":9346:9349   */\n      dup3\n        /* \"#utility.yul\":9342:9354   */\n      add\n        /* \"#utility.yul\":9335:9354   */\n      swap1\n      pop\n        /* \"#utility.yul\":8994:9360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9366:9785   */\n    tag_78:\n        /* \"#utility.yul\":9532:9536   */\n      0x00\n        /* \"#utility.yul\":9570:9572   */\n      0x20\n        /* \"#utility.yul\":9559:9568   */\n      dup3\n        /* \"#utility.yul\":9555:9573   */\n      add\n        /* \"#utility.yul\":9547:9573   */\n      swap1\n      pop\n        /* \"#utility.yul\":9619:9628   */\n      dup2\n        /* \"#utility.yul\":9613:9617   */\n      dup2\n        /* \"#utility.yul\":9609:9629   */\n      sub\n        /* \"#utility.yul\":9605:9606   */\n      0x00\n        /* \"#utility.yul\":9594:9603   */\n      dup4\n        /* \"#utility.yul\":9590:9607   */\n      add\n        /* \"#utility.yul\":9583:9630   */\n      mstore\n        /* \"#utility.yul\":9647:9778   */\n      tag_206\n        /* \"#utility.yul\":9773:9777   */\n      dup2\n        /* \"#utility.yul\":9647:9778   */\n      tag_116\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9639:9778   */\n      swap1\n      pop\n        /* \"#utility.yul\":9366:9785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9791:9973   */\n    tag_117:\n        /* \"#utility.yul\":9931:9965   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9927:9928   */\n      0x00\n        /* \"#utility.yul\":9919:9925   */\n      dup3\n        /* \"#utility.yul\":9915:9929   */\n      add\n        /* \"#utility.yul\":9908:9966   */\n      mstore\n        /* \"#utility.yul\":9791:9973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10345   */\n    tag_118:\n        /* \"#utility.yul\":10121:10124   */\n      0x00\n        /* \"#utility.yul\":10142:10209   */\n      tag_209\n        /* \"#utility.yul\":10206:10208   */\n      0x20\n        /* \"#utility.yul\":10201:10204   */\n      dup4\n        /* \"#utility.yul\":10142:10209   */\n      tag_102\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10135:10209   */\n      swap2\n      pop\n        /* \"#utility.yul\":10218:10311   */\n      tag_210\n        /* \"#utility.yul\":10307:10310   */\n      dup3\n        /* \"#utility.yul\":10218:10311   */\n      tag_117\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":10336:10338   */\n      0x20\n        /* \"#utility.yul\":10331:10334   */\n      dup3\n        /* \"#utility.yul\":10327:10339   */\n      add\n        /* \"#utility.yul\":10320:10339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9979:10345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10351:10770   */\n    tag_86:\n        /* \"#utility.yul\":10517:10521   */\n      0x00\n        /* \"#utility.yul\":10555:10557   */\n      0x20\n        /* \"#utility.yul\":10544:10553   */\n      dup3\n        /* \"#utility.yul\":10540:10558   */\n      add\n        /* \"#utility.yul\":10532:10558   */\n      swap1\n      pop\n        /* \"#utility.yul\":10604:10613   */\n      dup2\n        /* \"#utility.yul\":10598:10602   */\n      dup2\n        /* \"#utility.yul\":10594:10614   */\n      sub\n        /* \"#utility.yul\":10590:10591   */\n      0x00\n        /* \"#utility.yul\":10579:10588   */\n      dup4\n        /* \"#utility.yul\":10575:10592   */\n      add\n        /* \"#utility.yul\":10568:10615   */\n      mstore\n        /* \"#utility.yul\":10632:10763   */\n      tag_212\n        /* \"#utility.yul\":10758:10762   */\n      dup2\n        /* \"#utility.yul\":10632:10763   */\n      tag_118\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":10624:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10351:10770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220881c782417718993aadd1a9968db265e27d1173ddef1645e5a7a4de5790675c564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_256": {
									"entryPoint": 57,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 65,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c71806101146000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063b53472ef146100f6578063e79767af14610112578063f2fde38b1461012e5761007d565b8063153e66e614610082578063715018a61461009e578063756742f8146100a8575b600080fd5b61009c60048036038101906100979190610757565b61014a565b005b6100a66103d6565b005b6100c260048036038101906100bd91906107aa565b6103ea565b6040516100cf91906107f2565b60405180910390f35b6100e061040a565b6040516100ed919061081c565b60405180910390f35b610110600480360381019061010b91906107aa565b610433565b005b61012c600480360381019061012791906107aa565b61048e565b005b610148600480360381019061014391906107aa565b6104f1565b005b610152610574565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d5906108ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361024d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102449061094c565b60405180910390fd5b600080849050828173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161028d919061081c565b602060405180830381865afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610981565b101561030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610a20565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b815260040161034a929190610a4f565b6020604051808303816000875af1158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610aa4565b9150816103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c690610b1d565b60405180910390fd5b5050505050565b6103de610574565b6103e860006105f2565b565b60026020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610496610574565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6104f9610574565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90610baf565b60405180910390fd5b610571816105f2565b50565b61057c6106b6565b73ffffffffffffffffffffffffffffffffffffffff1661059a61040a565b73ffffffffffffffffffffffffffffffffffffffff16146105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790610c1b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ee826106c3565b9050919050565b6106fe816106e3565b811461070957600080fd5b50565b60008135905061071b816106f5565b92915050565b6000819050919050565b61073481610721565b811461073f57600080fd5b50565b6000813590506107518161072b565b92915050565b6000806000606084860312156107705761076f6106be565b5b600061077e8682870161070c565b935050602061078f8682870161070c565b92505060406107a086828701610742565b9150509250925092565b6000602082840312156107c0576107bf6106be565b5b60006107ce8482850161070c565b91505092915050565b60008115159050919050565b6107ec816107d7565b82525050565b600060208201905061080760008301846107e3565b92915050565b610816816106e3565b82525050565b6000602082019050610831600083018461080d565b92915050565b600082825260208201905092915050565b7f52616d70536572766963653a20546f6b656e206973206e6f7420616c6c6f776560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006108a4602183610837565b91506108af82610848565b604082019050919050565b600060208201905081810360008301526108d381610897565b9050919050565b7f52616d70536572766963653a20496e76616c696420726563656976657220616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000610936602583610837565b9150610941826108da565b604082019050919050565b6000602082019050818103600083015261096581610929565b9050919050565b60008151905061097b8161072b565b92915050565b600060208284031215610997576109966106be565b5b60006109a58482850161096c565b91505092915050565b7f52616d70536572766963653a20496e73756666696369656e742062616c616e6360008201527f6520696e20636f6e747261637400000000000000000000000000000000000000602082015250565b6000610a0a602d83610837565b9150610a15826109ae565b604082019050919050565b60006020820190508181036000830152610a39816109fd565b9050919050565b610a4981610721565b82525050565b6000604082019050610a64600083018561080d565b610a716020830184610a40565b9392505050565b610a81816107d7565b8114610a8c57600080fd5b50565b600081519050610a9e81610a78565b92915050565b600060208284031215610aba57610ab96106be565b5b6000610ac884828501610a8f565b91505092915050565b7f52616d70536572766963653a204661696c65642070726f63657373696e670000600082015250565b6000610b07601e83610837565b9150610b1282610ad1565b602082019050919050565b60006020820190508181036000830152610b3681610afa565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b99602683610837565b9150610ba482610b3d565b604082019050919050565b60006020820190508181036000830152610bc881610b8c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c05602083610837565b9150610c1082610bcf565b602082019050919050565b60006020820190508181036000830152610c3481610bf8565b905091905056fea2646970667358221220881c782417718993aadd1a9968db265e27d1173ddef1645e5a7a4de5790675c564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x39 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x41 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x105 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC71 DUP1 PUSH2 0x114 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xB53472EF EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xE79767AF EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x153E66E6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x756742F8 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x3D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x24D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x244 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP3 SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x369 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP DUP2 PUSH2 0x3CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C6 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x574 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x0 PUSH2 0x5F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x496 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x571 DUP2 PUSH2 0x5F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0x6B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59A PUSH2 0x40A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E7 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FE DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x71B DUP2 PUSH2 0x6F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x734 DUP2 PUSH2 0x721 JUMP JUMPDEST DUP2 EQ PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x751 DUP2 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x770 JUMPI PUSH2 0x76F PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP7 DUP3 DUP8 ADD PUSH2 0x70C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x78F DUP7 DUP3 DUP8 ADD PUSH2 0x70C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x7A0 DUP7 DUP3 DUP8 ADD PUSH2 0x742 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CE DUP5 DUP3 DUP6 ADD PUSH2 0x70C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x807 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x816 DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x831 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x80D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A20546F6B656E206973206E6F7420616C6C6F7765 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 PUSH1 0x21 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0x8AF DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D3 DUP2 PUSH2 0x897 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A20496E76616C6964207265636569766572206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x936 PUSH1 0x25 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0x941 DUP3 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x965 DUP2 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x97B DUP2 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A5 DUP5 DUP3 DUP6 ADD PUSH2 0x96C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A20496E73756666696369656E742062616C616E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6520696E20636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0A PUSH1 0x2D DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xA15 DUP3 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0x9FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA49 DUP2 PUSH2 0x721 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA64 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x80D JUMP JUMPDEST PUSH2 0xA71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA40 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA81 DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA9E DUP2 PUSH2 0xA78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH2 0xAB9 PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP5 DUP3 DUP6 ADD PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A204661696C65642070726F63657373696E670000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB07 PUSH1 0x1E DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xB12 DUP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB36 DUP2 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB99 PUSH1 0x26 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA4 DUP3 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC8 DUP2 PUSH2 0xB8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC05 PUSH1 0x20 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP3 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC34 DUP2 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SHR PUSH25 0x2417718993AADD1A9968DB265E27D1173DDEF1645E5A7A4DE5 PUSH26 0x675C564736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "285:1190:4:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;285:1190:4;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;285:1190:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1396,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_256": {
									"entryPoint": 1718,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1522,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowToken_291": {
									"entryPoint": 1075,
									"id": 291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedToken_279": {
									"entryPoint": 1002,
									"id": 279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_371": {
									"entryPoint": 330,
									"id": 371,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@disallowToken_305": {
									"entryPoint": 1166,
									"id": 305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 1034,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 982,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1265,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354": {
									"entryPoint": 2266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10773:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1343:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:32:5"
															},
															"nodeType": "YulIf",
															"src": "1307:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1436:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1480:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1563:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1608:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1736:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1274:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1282:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1290:6:5",
														"type": ""
													}
												],
												"src": "1197:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1934:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1936:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1936:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1909:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1918:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1930:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1901:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1901:32:5"
															},
															"nodeType": "YulIf",
															"src": "1898:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2027:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2042:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2056:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2046:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2071:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2106:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2102:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2081:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2081:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2071:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1858:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1869:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1881:6:5",
														"type": ""
													}
												],
												"src": "1822:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2199:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2209:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2234:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2227:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2209:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2181:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2191:7:5",
														"type": ""
													}
												],
												"src": "2157:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2312:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2329:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2349:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2334:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2322:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2300:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2307:3:5",
														"type": ""
													}
												],
												"src": "2253:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2482:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2493:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2470:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2544:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2557:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2568:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2506:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2506:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2432:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2444:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2455:4:5",
														"type": ""
													}
												],
												"src": "2368:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2666:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2689:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2671:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2659:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2659:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2644:3:5",
														"type": ""
													}
												],
												"src": "2584:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2806:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2816:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2828:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2839:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2816:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2896:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2909:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2920:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2905:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2852:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2852:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2778:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2790:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2801:4:5",
														"type": ""
													}
												],
												"src": "2708:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3032:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3049:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3054:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3042:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3042:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3070:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3089:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3094:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3085:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3070:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3004:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3009:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3020:11:5",
														"type": ""
													}
												],
												"src": "2936:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3239:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3247:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3235:14:5"
																	},
																	{
																		"hexValue": "52616d70536572766963653a20546f6b656e206973206e6f7420616c6c6f7765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3251:34:5",
																		"type": "",
																		"value": "RampService: Token is not allowe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3228:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3307:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3315:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3303:15:5"
																	},
																	{
																		"hexValue": "64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3320:3:5",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3296:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3296:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3209:6:5",
														"type": ""
													}
												],
												"src": "3111:220:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3483:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3493:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3559:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3564:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3500:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3500:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3493:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3665:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711",
																	"nodeType": "YulIdentifier",
																	"src": "3576:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3576:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3678:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3689:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3694:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3685:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3678:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3471:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3479:3:5",
														"type": ""
													}
												],
												"src": "3337:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3880:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3890:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3902:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3913:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3890:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3948:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3933:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3956:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3962:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3952:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3926:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3982:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4116:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3990:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3982:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3860:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3875:4:5",
														"type": ""
													}
												],
												"src": "3709:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4240:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4262:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4270:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:14:5"
																	},
																	{
																		"hexValue": "52616d70536572766963653a20496e76616c6964207265636569766572206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4274:34:5",
																		"type": "",
																		"value": "RampService: Invalid receiver ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4251:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4330:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4319:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4319:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4232:6:5",
														"type": ""
													}
												],
												"src": "4134:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4510:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4520:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4586:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4527:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4527:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4692:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354",
																	"nodeType": "YulIdentifier",
																	"src": "4603:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4603:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4705:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4716:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4721:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4705:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4498:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4506:3:5",
														"type": ""
													}
												],
												"src": "4364:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4917:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4929:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4940:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4925:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4917:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4964:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4975:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4960:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4983:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4989:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4979:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4953:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4953:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5009:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5143:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5017:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5009:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4887:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4902:4:5",
														"type": ""
													}
												],
												"src": "4736:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5224:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5234:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5243:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5234:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5292:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5265:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5265:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5265:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5202:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5210:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5218:5:5",
														"type": ""
													}
												],
												"src": "5161:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5387:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5433:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5435:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5435:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5435:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5408:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5404:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5404:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5429:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5400:32:5"
															},
															"nodeType": "YulIf",
															"src": "5397:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5526:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5541:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5555:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5545:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5570:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5616:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5627:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5612:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5612:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5636:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5580:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5580:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5570:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5357:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5368:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5380:6:5",
														"type": ""
													}
												],
												"src": "5310:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5773:126:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5803:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:14:5"
																	},
																	{
																		"hexValue": "52616d70536572766963653a20496e73756666696369656e742062616c616e63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5807:34:5",
																		"type": "",
																		"value": "RampService: Insufficient balanc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5784:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5784:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5863:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5871:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5859:15:5"
																	},
																	{
																		"hexValue": "6520696e20636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5876:15:5",
																		"type": "",
																		"value": "e in contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5852:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:40:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5852:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5765:6:5",
														"type": ""
													}
												],
												"src": "5667:232:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6051:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6061:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6127:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6132:2:5",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6068:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6061:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6233:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992",
																	"nodeType": "YulIdentifier",
																	"src": "6144:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6144:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6246:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6257:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6262:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6253:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6253:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6246:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6039:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6047:3:5",
														"type": ""
													}
												],
												"src": "5905:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6448:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6458:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6470:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6481:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6466:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6458:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6505:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6516:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6501:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6501:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6524:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6530:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6520:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6520:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6494:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6494:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6494:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6550:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6684:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6558:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6558:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6550:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6428:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6443:4:5",
														"type": ""
													}
												],
												"src": "6277:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6767:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6784:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6807:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6789:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6789:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6777:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6755:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6762:3:5",
														"type": ""
													}
												],
												"src": "6702:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6952:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6962:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6974:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6985:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6970:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6962:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7042:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7066:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7051:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6998:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6998:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7136:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7147:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7132:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7132:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7079:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7079:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6916:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6928:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6936:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6947:4:5",
														"type": ""
													}
												],
												"src": "6826:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7204:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7260:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7260:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7227:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7249:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7234:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7234:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7224:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7224:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7217:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:40:5"
															},
															"nodeType": "YulIf",
															"src": "7214:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7197:5:5",
														"type": ""
													}
												],
												"src": "7164:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7346:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7356:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7371:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7365:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7365:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7356:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7411:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7387:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7387:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7387:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7324:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7332:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7340:5:5",
														"type": ""
													}
												],
												"src": "7286:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7503:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7549:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7551:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7551:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7551:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7524:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7533:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7520:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7520:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7545:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:32:5"
															},
															"nodeType": "YulIf",
															"src": "7513:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "7642:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7657:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7671:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7661:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7686:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7729:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7740:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7725:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7725:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7749:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7696:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7696:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7686:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7473:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7484:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7496:6:5",
														"type": ""
													}
												],
												"src": "7429:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7908:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7916:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7904:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7904:14:5"
																	},
																	{
																		"hexValue": "52616d70536572766963653a204661696c65642070726f63657373696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7920:32:5",
																		"type": "",
																		"value": "RampService: Failed processing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:56:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7897:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7878:6:5",
														"type": ""
													}
												],
												"src": "7780:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8112:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8122:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8188:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8193:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8129:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8129:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8122:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8294:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243",
																	"nodeType": "YulIdentifier",
																	"src": "8205:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8205:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8205:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8307:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8318:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8323:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8314:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8307:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8100:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8108:3:5",
														"type": ""
													}
												],
												"src": "7966:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8509:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8519:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8531:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8542:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8519:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8566:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8562:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8562:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8585:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8591:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8581:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8581:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8555:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8555:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8555:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8611:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8745:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8619:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8611:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8489:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8504:4:5",
														"type": ""
													}
												],
												"src": "8338:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8869:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8891:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8899:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8887:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8887:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8903:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8880:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8880:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8880:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8959:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8967:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8955:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8955:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8972:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8948:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8948:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8861:6:5",
														"type": ""
													}
												],
												"src": "8763:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9140:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9150:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9216:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9221:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9157:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9157:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9150:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9322:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "9233:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9233:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9233:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9335:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9346:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9351:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9342:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9128:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9136:3:5",
														"type": ""
													}
												],
												"src": "8994:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9537:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9547:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9559:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9570:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9555:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9555:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9547:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9594:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9605:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9590:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9590:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9613:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9619:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9609:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9609:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9583:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9583:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9583:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9639:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9773:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9647:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9647:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9639:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9517:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9532:4:5",
														"type": ""
													}
												],
												"src": "9366:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9897:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9919:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9927:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9915:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9915:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9931:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9908:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9908:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9889:6:5",
														"type": ""
													}
												],
												"src": "9791:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10125:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10135:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10201:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10206:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10142:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10142:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10135:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10307:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10218:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10218:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10218:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10320:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10331:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10336:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10327:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10327:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10320:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10113:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10121:3:5",
														"type": ""
													}
												],
												"src": "9979:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10522:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10532:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10544:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10555:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10540:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10540:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10532:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10579:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10590:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10575:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10598:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10604:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10594:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10568:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10568:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10624:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10758:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10632:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10632:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10624:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10502:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10517:4:5",
														"type": ""
													}
												],
												"src": "10351:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711(memPtr) {\n\n        mstore(add(memPtr, 0), \"RampService: Token is not allowe\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354(memPtr) {\n\n        mstore(add(memPtr, 0), \"RampService: Invalid receiver ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992(memPtr) {\n\n        mstore(add(memPtr, 0), \"RampService: Insufficient balanc\")\n\n        mstore(add(memPtr, 32), \"e in contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243(memPtr) {\n\n        mstore(add(memPtr, 0), \"RampService: Failed processing\")\n\n    }\n\n    function abi_encode_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063b53472ef146100f6578063e79767af14610112578063f2fde38b1461012e5761007d565b8063153e66e614610082578063715018a61461009e578063756742f8146100a8575b600080fd5b61009c60048036038101906100979190610757565b61014a565b005b6100a66103d6565b005b6100c260048036038101906100bd91906107aa565b6103ea565b6040516100cf91906107f2565b60405180910390f35b6100e061040a565b6040516100ed919061081c565b60405180910390f35b610110600480360381019061010b91906107aa565b610433565b005b61012c600480360381019061012791906107aa565b61048e565b005b610148600480360381019061014391906107aa565b6104f1565b005b610152610574565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d5906108ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361024d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102449061094c565b60405180910390fd5b600080849050828173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161028d919061081c565b602060405180830381865afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610981565b101561030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610a20565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b815260040161034a929190610a4f565b6020604051808303816000875af1158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610aa4565b9150816103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c690610b1d565b60405180910390fd5b5050505050565b6103de610574565b6103e860006105f2565b565b60026020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610496610574565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6104f9610574565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90610baf565b60405180910390fd5b610571816105f2565b50565b61057c6106b6565b73ffffffffffffffffffffffffffffffffffffffff1661059a61040a565b73ffffffffffffffffffffffffffffffffffffffff16146105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790610c1b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ee826106c3565b9050919050565b6106fe816106e3565b811461070957600080fd5b50565b60008135905061071b816106f5565b92915050565b6000819050919050565b61073481610721565b811461073f57600080fd5b50565b6000813590506107518161072b565b92915050565b6000806000606084860312156107705761076f6106be565b5b600061077e8682870161070c565b935050602061078f8682870161070c565b92505060406107a086828701610742565b9150509250925092565b6000602082840312156107c0576107bf6106be565b5b60006107ce8482850161070c565b91505092915050565b60008115159050919050565b6107ec816107d7565b82525050565b600060208201905061080760008301846107e3565b92915050565b610816816106e3565b82525050565b6000602082019050610831600083018461080d565b92915050565b600082825260208201905092915050565b7f52616d70536572766963653a20546f6b656e206973206e6f7420616c6c6f776560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006108a4602183610837565b91506108af82610848565b604082019050919050565b600060208201905081810360008301526108d381610897565b9050919050565b7f52616d70536572766963653a20496e76616c696420726563656976657220616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000610936602583610837565b9150610941826108da565b604082019050919050565b6000602082019050818103600083015261096581610929565b9050919050565b60008151905061097b8161072b565b92915050565b600060208284031215610997576109966106be565b5b60006109a58482850161096c565b91505092915050565b7f52616d70536572766963653a20496e73756666696369656e742062616c616e6360008201527f6520696e20636f6e747261637400000000000000000000000000000000000000602082015250565b6000610a0a602d83610837565b9150610a15826109ae565b604082019050919050565b60006020820190508181036000830152610a39816109fd565b9050919050565b610a4981610721565b82525050565b6000604082019050610a64600083018561080d565b610a716020830184610a40565b9392505050565b610a81816107d7565b8114610a8c57600080fd5b50565b600081519050610a9e81610a78565b92915050565b600060208284031215610aba57610ab96106be565b5b6000610ac884828501610a8f565b91505092915050565b7f52616d70536572766963653a204661696c65642070726f63657373696e670000600082015250565b6000610b07601e83610837565b9150610b1282610ad1565b602082019050919050565b60006020820190508181036000830152610b3681610afa565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b99602683610837565b9150610ba482610b3d565b604082019050919050565b60006020820190508181036000830152610bc881610b8c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c05602083610837565b9150610c1082610bcf565b602082019050919050565b60006020820190508181036000830152610c3481610bf8565b905091905056fea2646970667358221220881c782417718993aadd1a9968db265e27d1173ddef1645e5a7a4de5790675c564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xB53472EF EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xE79767AF EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x153E66E6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x756742F8 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x3D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x24D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x244 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP3 SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x369 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP DUP2 PUSH2 0x3CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C6 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x574 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x0 PUSH2 0x5F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x496 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x4F9 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x571 DUP2 PUSH2 0x5F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0x6B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59A PUSH2 0x40A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E7 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FE DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x71B DUP2 PUSH2 0x6F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x734 DUP2 PUSH2 0x721 JUMP JUMPDEST DUP2 EQ PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x751 DUP2 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x770 JUMPI PUSH2 0x76F PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP7 DUP3 DUP8 ADD PUSH2 0x70C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x78F DUP7 DUP3 DUP8 ADD PUSH2 0x70C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x7A0 DUP7 DUP3 DUP8 ADD PUSH2 0x742 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CE DUP5 DUP3 DUP6 ADD PUSH2 0x70C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EC DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x807 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x816 DUP2 PUSH2 0x6E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x831 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x80D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A20546F6B656E206973206E6F7420616C6C6F7765 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 PUSH1 0x21 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0x8AF DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D3 DUP2 PUSH2 0x897 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A20496E76616C6964207265636569766572206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x936 PUSH1 0x25 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0x941 DUP3 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x965 DUP2 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x97B DUP2 PUSH2 0x72B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A5 DUP5 DUP3 DUP6 ADD PUSH2 0x96C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A20496E73756666696369656E742062616C616E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6520696E20636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0A PUSH1 0x2D DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xA15 DUP3 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0x9FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA49 DUP2 PUSH2 0x721 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA64 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x80D JUMP JUMPDEST PUSH2 0xA71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA40 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA81 DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA9E DUP2 PUSH2 0xA78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH2 0xAB9 PUSH2 0x6BE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP5 DUP3 DUP6 ADD PUSH2 0xA8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52616D70536572766963653A204661696C65642070726F63657373696E670000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB07 PUSH1 0x1E DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xB12 DUP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB36 DUP2 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB99 PUSH1 0x26 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA4 DUP3 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC8 DUP2 PUSH2 0xB8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC05 PUSH1 0x20 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP3 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC34 DUP2 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SHR PUSH25 0x2417718993AADD1A9968DB265E27D1173DDEF1645E5A7A4DE5 PUSH26 0x675C564736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "285:1190:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:808;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;340:44:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:88:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;558:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;665:808:4;1094:13:0;:11;:13::i;:::-;770:12:4::1;:27;783:13;770:27;;;;;;;;;;;;;;;;;;;;;;;;;762:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;971:1;951:22;;:8;:22;;::::0;943:72:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1026:9;1053:12:::0;1075:13:::1;1053:36;;1141:6;1107:5;:15;;;1131:4;1107:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;1099:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;1214:5;:14;;;1229:8;1239:6;1214:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1207:39;;1264:4;1256:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;752:721;;665:808:::0;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;340:44:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;464:88:4:-;541:4;518:12;:20;531:6;518:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;464:88;:::o;558:101::-;1094:13:0;:11;:13::i;:::-;647:5:4::1;624:12;:20;637:6;624:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;558:101:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:329::-;1881:6;1930:2;1918:9;1909:7;1905:23;1901:32;1898:119;;;1936:79;;:::i;:::-;1898:119;2056:1;2081:53;2126:7;2117:6;2106:9;2102:22;2081:53;:::i;:::-;2071:63;;2027:117;1822:329;;;;:::o;2157:90::-;2191:7;2234:5;2227:13;2220:21;2209:32;;2157:90;;;:::o;2253:109::-;2334:21;2349:5;2334:21;:::i;:::-;2329:3;2322:34;2253:109;;:::o;2368:210::-;2455:4;2493:2;2482:9;2478:18;2470:26;;2506:65;2568:1;2557:9;2553:17;2544:6;2506:65;:::i;:::-;2368:210;;;;:::o;2584:118::-;2671:24;2689:5;2671:24;:::i;:::-;2666:3;2659:37;2584:118;;:::o;2708:222::-;2801:4;2839:2;2828:9;2824:18;2816:26;;2852:71;2920:1;2909:9;2905:17;2896:6;2852:71;:::i;:::-;2708:222;;;;:::o;2936:169::-;3020:11;3054:6;3049:3;3042:19;3094:4;3089:3;3085:14;3070:29;;2936:169;;;;:::o;3111:220::-;3251:34;3247:1;3239:6;3235:14;3228:58;3320:3;3315:2;3307:6;3303:15;3296:28;3111:220;:::o;3337:366::-;3479:3;3500:67;3564:2;3559:3;3500:67;:::i;:::-;3493:74;;3576:93;3665:3;3576:93;:::i;:::-;3694:2;3689:3;3685:12;3678:19;;3337:366;;;:::o;3709:419::-;3875:4;3913:2;3902:9;3898:18;3890:26;;3962:9;3956:4;3952:20;3948:1;3937:9;3933:17;3926:47;3990:131;4116:4;3990:131;:::i;:::-;3982:139;;3709:419;;;:::o;4134:224::-;4274:34;4270:1;4262:6;4258:14;4251:58;4343:7;4338:2;4330:6;4326:15;4319:32;4134:224;:::o;4364:366::-;4506:3;4527:67;4591:2;4586:3;4527:67;:::i;:::-;4520:74;;4603:93;4692:3;4603:93;:::i;:::-;4721:2;4716:3;4712:12;4705:19;;4364:366;;;:::o;4736:419::-;4902:4;4940:2;4929:9;4925:18;4917:26;;4989:9;4983:4;4979:20;4975:1;4964:9;4960:17;4953:47;5017:131;5143:4;5017:131;:::i;:::-;5009:139;;4736:419;;;:::o;5161:143::-;5218:5;5249:6;5243:13;5234:22;;5265:33;5292:5;5265:33;:::i;:::-;5161:143;;;;:::o;5310:351::-;5380:6;5429:2;5417:9;5408:7;5404:23;5400:32;5397:119;;;5435:79;;:::i;:::-;5397:119;5555:1;5580:64;5636:7;5627:6;5616:9;5612:22;5580:64;:::i;:::-;5570:74;;5526:128;5310:351;;;;:::o;5667:232::-;5807:34;5803:1;5795:6;5791:14;5784:58;5876:15;5871:2;5863:6;5859:15;5852:40;5667:232;:::o;5905:366::-;6047:3;6068:67;6132:2;6127:3;6068:67;:::i;:::-;6061:74;;6144:93;6233:3;6144:93;:::i;:::-;6262:2;6257:3;6253:12;6246:19;;5905:366;;;:::o;6277:419::-;6443:4;6481:2;6470:9;6466:18;6458:26;;6530:9;6524:4;6520:20;6516:1;6505:9;6501:17;6494:47;6558:131;6684:4;6558:131;:::i;:::-;6550:139;;6277:419;;;:::o;6702:118::-;6789:24;6807:5;6789:24;:::i;:::-;6784:3;6777:37;6702:118;;:::o;6826:332::-;6947:4;6985:2;6974:9;6970:18;6962:26;;6998:71;7066:1;7055:9;7051:17;7042:6;6998:71;:::i;:::-;7079:72;7147:2;7136:9;7132:18;7123:6;7079:72;:::i;:::-;6826:332;;;;;:::o;7164:116::-;7234:21;7249:5;7234:21;:::i;:::-;7227:5;7224:32;7214:60;;7270:1;7267;7260:12;7214:60;7164:116;:::o;7286:137::-;7340:5;7371:6;7365:13;7356:22;;7387:30;7411:5;7387:30;:::i;:::-;7286:137;;;;:::o;7429:345::-;7496:6;7545:2;7533:9;7524:7;7520:23;7516:32;7513:119;;;7551:79;;:::i;:::-;7513:119;7671:1;7696:61;7749:7;7740:6;7729:9;7725:22;7696:61;:::i;:::-;7686:71;;7642:125;7429:345;;;;:::o;7780:180::-;7920:32;7916:1;7908:6;7904:14;7897:56;7780:180;:::o;7966:366::-;8108:3;8129:67;8193:2;8188:3;8129:67;:::i;:::-;8122:74;;8205:93;8294:3;8205:93;:::i;:::-;8323:2;8318:3;8314:12;8307:19;;7966:366;;;:::o;8338:419::-;8504:4;8542:2;8531:9;8527:18;8519:26;;8591:9;8585:4;8581:20;8577:1;8566:9;8562:17;8555:47;8619:131;8745:4;8619:131;:::i;:::-;8611:139;;8338:419;;;:::o;8763:225::-;8903:34;8899:1;8891:6;8887:14;8880:58;8972:8;8967:2;8959:6;8955:15;8948:33;8763:225;:::o;8994:366::-;9136:3;9157:67;9221:2;9216:3;9157:67;:::i;:::-;9150:74;;9233:93;9322:3;9233:93;:::i;:::-;9351:2;9346:3;9342:12;9335:19;;8994:366;;;:::o;9366:419::-;9532:4;9570:2;9559:9;9555:18;9547:26;;9619:9;9613:4;9609:20;9605:1;9594:9;9590:17;9583:47;9647:131;9773:4;9647:131;:::i;:::-;9639:139;;9366:419;;;:::o;9791:182::-;9931:34;9927:1;9919:6;9915:14;9908:58;9791:182;:::o;9979:366::-;10121:3;10142:67;10206:2;10201:3;10142:67;:::i;:::-;10135:74;;10218:93;10307:3;10218:93;:::i;:::-;10336:2;10331:3;10327:12;10320:19;;9979:366;;;:::o;10351:419::-;10517:4;10555:2;10544:9;10540:18;10532:26;;10604:9;10598:4;10594:20;10590:1;10579:9;10575:17;10568:47;10632:131;10758:4;10632:131;:::i;:::-;10624:139;;10351:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "637000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowToken(address)": "24834",
								"allowedToken(address)": "2890",
								"buy(address,address,uint256)": "infinite",
								"disallowToken(address)": "27120",
								"owner()": "2522",
								"renounceOwnership()": "30421",
								"transferOwnership(address)": "30810"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 1475,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881c782417718993aadd1a9968db265e27d1173ddef1645e5a7a4de5790675c564736f6c63430008120033",
									".code": [
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "B53472EF"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "E79767AF"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "153E66E6"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "756742F8"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 1475,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 665,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 340,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 340,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 464,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 464,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 464,
											"end": 552,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 464,
											"end": 552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 464,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 464,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 464,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 558,
											"end": 659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 558,
											"end": 659,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 659,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 558,
											"end": 659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 558,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 558,
											"end": 659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 558,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 558,
											"end": 659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 796,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 770,
											"end": 797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 762,
											"end": 835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 971,
											"end": 972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 951,
											"end": 973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 951,
											"end": 959,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 951,
											"end": 973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 951,
											"end": 973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 951,
											"end": 973,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 943,
											"end": 1015,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 943,
											"end": 1015,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1088,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1089,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1131,
											"end": 1135,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1107,
											"end": 1137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1107,
											"end": 1137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1107,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1147,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1147,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1099,
											"end": 1197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1099,
											"end": 1197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1219,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1229,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1214,
											"end": 1246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1214,
											"end": 1246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1214,
											"end": 1246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1246,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1264,
											"end": 1268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1256,
											"end": 1303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1256,
											"end": 1303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 752,
											"end": 1473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 752,
											"end": 1473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 665,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 340,
											"end": 384,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 552,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 464,
											"end": 552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 545,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 518,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 538,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 518,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 518,
											"end": 545,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 518,
											"end": 545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 558,
											"end": 659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 643,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 624,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 624,
											"end": 652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 558,
											"end": 659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1345,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1618,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1746,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 1887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1916,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1933,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1936,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2081,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2241,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2334,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2506,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2671,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2696,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2852,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3105,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2936,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3105,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3105,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3331,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3111,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3285,
											"name": "PUSH",
											"source": 5,
											"value": "52616D70536572766963653A20546F6B656E206973206E6F7420616C6C6F7765"
										},
										{
											"begin": 3247,
											"end": 3248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3235,
											"end": 3249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3286,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3323,
											"name": "PUSH",
											"source": 5,
											"value": "6400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3315,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3703,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3337,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3559,
											"end": 3562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3500,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3567,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3500,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3493,
											"end": 3567,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3493,
											"end": 3567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3576,
											"end": 3669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3669,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3576,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3696,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 4128,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3709,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3956,
											"end": 3960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3972,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3973,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3990,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 4121,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3990,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 4121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 4121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 4128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 4128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 4128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 4128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4358,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4134,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "52616D70536572766963653A20496E76616C6964207265636569766572206164"
										},
										{
											"begin": 4270,
											"end": 4271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4350,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4338,
											"end": 4340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4730,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4364,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4506,
											"end": 4509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4586,
											"end": 4589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4527,
											"end": 4594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4594,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4527,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4520,
											"end": 4594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4520,
											"end": 4594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4603,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4603,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4723,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4364,
											"end": 4730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 5155,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4736,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 4998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 4999,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 4977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 5000,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5143,
											"end": 5147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5017,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5017,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 5155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 5155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 5155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 5155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5304,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5161,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5234,
											"end": 5256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5234,
											"end": 5256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5292,
											"end": 5297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5265,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5298,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5265,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5304,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5661,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 5310,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5432,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5435,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5636,
											"end": 5643,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5625,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5580,
											"end": 5644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5644,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5580,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5661,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5899,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5667,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 5841,
											"name": "PUSH",
											"source": 5,
											"value": "52616D70536572766963653A20496E73756666696369656E742062616C616E63"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5891,
											"name": "PUSH",
											"source": 5,
											"value": "6520696E20636F6E747261637400000000000000000000000000000000000000"
										},
										{
											"begin": 5871,
											"end": 5873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5863,
											"end": 5869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5892,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 6271,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5905,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6132,
											"end": 6134,
											"name": "PUSH",
											"source": 5,
											"value": "2D"
										},
										{
											"begin": 6127,
											"end": 6130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 6068,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6068,
											"end": 6135,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6068,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6061,
											"end": 6135,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6061,
											"end": 6135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6144,
											"end": 6237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6237,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6144,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6257,
											"end": 6260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 6271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 6271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 6271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 6271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6696,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6277,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6470,
											"end": 6479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6530,
											"end": 6539,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6520,
											"end": 6540,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6494,
											"end": 6541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6558,
											"end": 6689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6689,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6558,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6820,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6702,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 6789,
											"end": 6813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6813,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6789,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 7158,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6826,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6947,
											"end": 6951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6974,
											"end": 6983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 6988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 6988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 7066,
											"end": 7067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7042,
											"end": 7048,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6998,
											"end": 7069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6998,
											"end": 7069,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6998,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 7147,
											"end": 7149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7079,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7151,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 7079,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 7158,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 7158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 7158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 7158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 7158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 7158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7280,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 7164,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7234,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7234,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7234,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7234,
											"end": 7255,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 7234,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7256,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7214,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7214,
											"end": 7274,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7268,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7214,
											"end": 7274,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7214,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7423,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7286,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7340,
											"end": 7345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7365,
											"end": 7378,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7387,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7411,
											"end": 7416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7387,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 7387,
											"end": 7417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7387,
											"end": 7417,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7387,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7423,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7774,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7429,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7547,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7533,
											"end": 7542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7531,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7543,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7548,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7551,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7551,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7513,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7749,
											"end": 7756,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7725,
											"end": 7747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7696,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7757,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7696,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7642,
											"end": 7767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7774,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7960,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7780,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7920,
											"end": 7952,
											"name": "PUSH",
											"source": 5,
											"value": "52616D70536572766963653A204661696C65642070726F63657373696E670000"
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7904,
											"end": 7918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7897,
											"end": 7953,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 8332,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7966,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 8188,
											"end": 8191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8129,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 8129,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8129,
											"end": 8196,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 8129,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8122,
											"end": 8196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8122,
											"end": 8196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 8294,
											"end": 8297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 8205,
											"end": 8298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8205,
											"end": 8298,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 8205,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8325,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8318,
											"end": 8321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8314,
											"end": 8326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8307,
											"end": 8326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8307,
											"end": 8326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 8332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 8332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 8332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8757,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 8338,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8544,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8531,
											"end": 8540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8519,
											"end": 8545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8519,
											"end": 8545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8591,
											"end": 8600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8585,
											"end": 8589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8581,
											"end": 8601,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8566,
											"end": 8575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8562,
											"end": 8579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8555,
											"end": 8602,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8619,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 8745,
											"end": 8749,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8619,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8619,
											"end": 8750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8619,
											"end": 8750,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 8619,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8611,
											"end": 8750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8611,
											"end": 8750,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8763,
											"end": 8988,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 8763,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 8937,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8887,
											"end": 8901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 8938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8972,
											"end": 8980,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8967,
											"end": 8969,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8955,
											"end": 8970,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8948,
											"end": 8981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8763,
											"end": 8988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8763,
											"end": 8988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9360,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 8994,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9157,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 9221,
											"end": 9223,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 9216,
											"end": 9219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 9157,
											"end": 9224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9224,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 9157,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9150,
											"end": 9224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9150,
											"end": 9224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9233,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9322,
											"end": 9325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9233,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 9233,
											"end": 9326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9233,
											"end": 9326,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9233,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9351,
											"end": 9353,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9335,
											"end": 9354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9335,
											"end": 9354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9366,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9532,
											"end": 9536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9559,
											"end": 9568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9555,
											"end": 9573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9547,
											"end": 9573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9547,
											"end": 9573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9609,
											"end": 9629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 9606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9594,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9590,
											"end": 9607,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9583,
											"end": 9630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9647,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 9773,
											"end": 9777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9647,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 9647,
											"end": 9778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9647,
											"end": 9778,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 9647,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9973,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 9791,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9931,
											"end": 9965,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9915,
											"end": 9929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9966,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10201,
											"end": 10204,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10142,
											"end": 10209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10135,
											"end": 10209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10135,
											"end": 10209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 10218,
											"end": 10311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10336,
											"end": 10338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10331,
											"end": 10334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10327,
											"end": 10339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10320,
											"end": 10339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10320,
											"end": 10339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10598,
											"end": 10602,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10615,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10758,
											"end": 10762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 10632,
											"end": 10763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10351,
											"end": 10770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contract2_test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowToken(address)": "b53472ef",
							"allowedToken(address)": "756742f8",
							"buy(address,address,uint256)": "153e66e6",
							"disallowToken(address)": "e79767af",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"allowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"disallowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract2_test.sol\":\"RampService\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contract2_test.sol\":{\"keccak256\":\"0xf9d9f1a27bf05f5b9292fb4f3a9265d30cdb1fdb4aa2dc15460975c603a976c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://190cfdadb30e1475bf382116a66407373b687296d5d890f15c003212ab706b1a\",\"dweb:/ipfs/QmRtGDeKNaSFb5T2eQ6N647fQAmjjek15yyHQ3WS3xv9nN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contract2_test.sol:RampService",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contract2_test.sol:RampService",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 279,
								"contract": "contract2_test.sol:RampService",
								"label": "allowedToken",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 267,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								266
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 178,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 187,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 252,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 254,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 266,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 261,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 260,
												"id": 263,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 266,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"contract2_test.sol": {
				"ast": {
					"absolutePath": "contract2_test.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"IERC20": [
							244
						],
						"Ownable": [
							112
						],
						"RampService": [
							372
						],
						"ReentrancyGuard": [
							166
						]
					},
					"id": 373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 373,
							"sourceUnit": 245,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 373,
							"sourceUnit": 113,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 373,
							"sourceUnit": 167,
							"src": "167:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 272,
										"name": "Ownable",
										"nameLocations": [
											"309:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "309:7:4"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "309:7:4"
								},
								{
									"baseName": {
										"id": 274,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"318:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "318:15:4"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "318:15:4"
								}
							],
							"canonicalName": "RampService",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 372,
							"linearizedBaseContracts": [
								372,
								166,
								112,
								266
							],
							"name": "RampService",
							"nameLocation": "294:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "756742f8",
									"id": 279,
									"mutability": "mutable",
									"name": "allowedToken",
									"nameLocation": "372:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 372,
									"src": "340:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 278,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "348:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "340:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "359:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "508:44:4",
										"statements": [
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 284,
															"name": "allowedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "518:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 286,
														"indexExpression": {
															"id": 285,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "531:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "518:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "541:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "518:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "518:27:4"
											}
										]
									},
									"functionSelector": "b53472ef",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowToken",
									"nameLocation": "473:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "492:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "484:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:16:4"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "508:0:4"
									},
									"scope": 372,
									"src": "464:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "614:45:4",
										"statements": [
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 298,
															"name": "allowedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "624:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 300,
														"indexExpression": {
															"id": 299,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "637:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "624:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "647:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "624:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "624:28:4"
											}
										]
									},
									"functionSelector": "e79767af",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 295,
												"name": "onlyOwner",
												"nameLocations": [
													"604:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "604:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "604:9:4"
										}
									],
									"name": "disallowToken",
									"nameLocation": "567:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "589:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "581:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:16:4"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:0:4"
									},
									"scope": 372,
									"src": "558:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "752:721:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 317,
																"name": "allowedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "770:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 319,
															"indexExpression": {
																"id": 318,
																"name": "address_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "783:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "770:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52616d70536572766963653a20546f6b656e206973206e6f7420616c6c6f776564",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "799:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711",
																"typeString": "literal_string \"RampService: Token is not allowed\""
															},
															"value": "RampService: Token is not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e800fc2de6d925eac43d3582adc5fac5eafcdd9dbe36dc579108f76ee09f9711",
																"typeString": "literal_string \"RampService: Token is not allowed\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "762:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "762:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "762:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 324,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "951:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "971:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "963:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 325,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "963:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "963:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "951:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52616d70536572766963653a20496e76616c69642072656365697665722061646472657373",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354",
																"typeString": "literal_string \"RampService: Invalid receiver address\""
															},
															"value": "RampService: Invalid receiver address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7436e3184cddd14d29ca624a65c64ab060d428b9c3783317268b70d55cdd2354",
																"typeString": "literal_string \"RampService: Invalid receiver address\""
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "943:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "943:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "943:72:4"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1031:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "1026:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 333,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1026:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1038:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1026:17:4"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "1060:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "1053:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 338,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 337,
																"name": "IERC20",
																"nameLocations": [
																	"1053:6:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 244,
																"src": "1053:6:4"
															},
															"referencedDeclaration": 244,
															"src": "1053:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [
														{
															"id": 341,
															"name": "address_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "1075:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 340,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "1068:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1053:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 349,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1131:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_RampService_$372",
																					"typeString": "contract RampService"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_RampService_$372",
																					"typeString": "contract RampService"
																				}
																			],
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1123:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 347,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1123:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1123:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 345,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "1107:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1113:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "1107:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1107:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 352,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1141:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1107:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52616d70536572766963653a20496e73756666696369656e742062616c616e636520696e20636f6e7472616374",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992",
																"typeString": "literal_string \"RampService: Insufficient balance in contract\""
															},
															"value": "RampService: Insufficient balance in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9aaf10e7ce869433a0e68a12ee2647f3f4b87e5fdb4b0bb5e47a6961c9618992",
																"typeString": "literal_string \"RampService: Insufficient balance in contract\""
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1099:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "1099:98:4"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 357,
														"name": "sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1207:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 360,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "1229:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 361,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1239:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 358,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$244",
																	"typeString": "contract IERC20"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1220:8:4",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 211,
															"src": "1214:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1214:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1207:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1207:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "1264:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52616d70536572766963653a204661696c65642070726f63657373696e67",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1270:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243",
																"typeString": "literal_string \"RampService: Failed processing\""
															},
															"value": "RampService: Failed processing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5558c6809bceb474c0cca3b4282fa165c23ce819e107e1bee5977541fa191243",
																"typeString": "literal_string \"RampService: Failed processing\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1256:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1256:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "1256:47:4"
											}
										]
									},
									"functionSelector": "153e66e6",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nameLocations": [
													"742:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "742:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "742:9:4"
										}
									],
									"name": "buy",
									"nameLocation": "674:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "address_token",
												"nameLocation": "686:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "678:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "709:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "701:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:57:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:0:4"
									},
									"scope": 372,
									"src": "665:808:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 373,
							"src": "285:1190:4",
							"usedErrors": []
						}
					],
					"src": "32:1443:4"
				},
				"id": 4
			}
		}
	}
}